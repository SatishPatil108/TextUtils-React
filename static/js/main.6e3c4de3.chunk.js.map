{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","style","height","width","cursor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","newtext","split","join","filter","element","Alert","alert","role","word","lower","charAt","slice","capitalise","msg","defaultProps","aboutText","App","_useState3","_useState4","setAlert","cls","document","body","classList","remove","add","message","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","react_router_dom","src_App"],"mappings":"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","file":"static/js/main.6e3c4de3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n// \r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-primary navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n\r\n              {/* <li className=\"nav-item\">\r\n                 {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>  */}\r\n                {/* <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n              </li>  */}\r\n              \r\n\r\n            </ul>\r\n          </div>\r\n          <div className=\"d-flex\">\r\n              <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n              <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n              <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n              <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n              <div className=\"bg-light rounded mx-2\" onClick={()=>{props.toggleMode('light')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n              <div className=\"bg-dark rounded mx-2\" onClick={()=>{props.toggleMode('dark')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n          </div>\r\n\r\n           \r\n\r\n        </div>\r\n\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'About'\r\n};","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was Clicked : \" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!\",\"success\");\r\n  };\r\n\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase!\",\"success\");\r\n\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared!\",\"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Copy to Clipboard!\",\"success\");\r\n  }\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newtext = text.split(/[ ]+/);\r\n    setText(newtext.join(\" \"));\r\n    props.showAlert(\"Extra Space Removed!\",\"success\");\r\n  }\r\n  const [text, setText] = useState('');\r\n  // text = \"new text\";// wrong way to change the state\r\n  // setText(\"new text\");// correct way to change the state\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\"  style={{ color: props.mode === 'light' ? 'black' : '#042743' }}>\r\n        <h1 className='mb-4'>{props.heading} </h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === 'dark' ? '#13466e' : 'white',\r\n              color: props.mode === 'dark' ? 'white' : '#042743'\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-primary my-1 mx-1\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary my-1 mx-1\" onClick={handleLoClick}>\r\n          Convert to LowerCase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary my-1 mx-1\" onClick={handleClearClick}>\r\n          Cleartext\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary my-1 mx-1\" onClick={handleCopy}>\r\n          Copytext\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary my-1 mx-1\" onClick={handleExtraSpaces}>\r\n          RemoveExtra Spaces\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container my-3\"  style={{ color: props.mode === 'light' ? 'black' : '#042743' }}>\r\n        <h1>Your text summary</h1>\r\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0? text:\"Nothing to Preview!\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalise = (word)=>{\r\n         const lower = word.toLowerCase();\r\n         return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n\r\n    return (\r\n       <div style={{height :'50px'}}>\r\n         {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n              <strong>{capitalise(props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\n\n// import {\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode] = useState('light');//whethere darkMode is enable or not\n\n \n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const removeBodyClasses=()=>{\n      document.body.classList.remove('bg-dark')\n      document.body.classList.remove('bg-light')\n      document.body.classList.remove('bg-warning')\n      document.body.classList.remove('bg-primary')\n      document.body.classList.remove('bg-danger')\n      document.body.classList.remove('bg-success')\n  }\n\n  const toggleMode = (cls) => {\n    removeBodyClasses();\n    document.body.classList.add('bg-'+cls);\n  }\n      \n    \n  \n  return (\n    <>\n      {/* <Navbar title =\"TextUtils\" aboutText = \"About TextUtils\" /> */}\n      {/* <Navbar /> */}\n\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n\n      <div className=\"container my-3\">\n         {<TextForm showAlert={showAlert} heading=\"TextUtils - Word Counter, Character Counter , Remove Extra Spaces\" mode={mode} />}\n         {/* {<About mode={mode} />} */}\n      </div>\n\n      {/* <div className=\"container my-3\">\n        <Routes>\n          {/* /users  --> Components 1\n          /users/home  --> Components 2 */}\n          {/* <Route exact path=\"/about\" element={<About mode={mode} />} /> */}\n          {/* < Route exact path=\"/\" */}\n           {/* element=  */}\n          {/* {<TextForm showAlert={showAlert} heading=\"TextUtils - Word Counter, Character Counter , Remove Extra Spaces\" mode={mode} />} */}\n           {/* />  */}\n        {/* </Routes> */}\n       {/* </div>  */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n\n<BrowserRouter>\n    <App />\n  </BrowserRouter> \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}